- button_path = local_assigns.fetch(:new_project_issue_button_path, false)
- project_select_button = local_assigns.fetch(:project_select_button, false)
- show_import_button = local_assigns.fetch(:show_import_button, false) && can?(current_user, :import_issues, @project)
- has_button = button_path || project_select_button
- closed_issues_count = issuables_count_for_state(:issues, :closed)
- opened_issues_count = issuables_count_for_state(:issues, :opened)
- is_opened_state = params[:state] == 'opened'
- is_closed_state = params[:state] == 'closed'

.row.empty-state
  .col-12
    .svg-content
      = image_tag 'illustrations/issues.svg'
  .col-12
    .text-content
      - if has_filter_bar_param?
        %h4.text-center
          = _("Sorry, your filter produced no results")
        %p.text-center
          = _("To widen your search, change or remove filters above")
        - if show_new_issue_link?(@project)
          .text-center
            = link_to _("New issue"), new_project_issue_path(@project), class: "btn btn-success"
      - elsif is_opened_state && opened_issues_count == 0 && closed_issues_count > 0
        %h4.text-center
          = _("There are no open issues")
        %p.text-center
          = _("To keep this project going, create a new issue")
        - if show_new_issue_link?(@project)
          .text-center
            = link_to _("New issue"), new_project_issue_path(@project), class: "btn btn-success"
      - elsif is_closed_state && opened_issues_count > 0 && closed_issues_count == 0
        %h4.text-center
          = _("There are no closed issues")
      - elsif current_user
        %h4
          = _("The Issue Tracker is the place to add things that need to be improved or solved in a project")
        %p
          = _("Issues can be bugs, tasks or ideas to be discussed. Also, issues are searchable and filterable.")
        - if has_button
          .text-center
            - if project_select_button
              = render 'shared/new_project_item_select', path: 'issues/new', label: _('New issue'), type: :issues, with_feature_enabled: 'issues'
            - else
              = link_to _('New issue'), button_path, class: 'btn btn-success', id: 'new_issue_link'

            - if show_import_button
              = render 'projects/issues/import_csv/button', type: :text
        %hr
        %p.gl-text-center.gl-mb-0
          %strong
            = s_('JiraService|Using Jira for issue tracking?')
        %p.gl-text-center.gl-mb-0
          - jira_docs_link_url = help_page_url('user/project/integrations/jira', anchor: 'view-jira-issues')
          - jira_docs_link_start = '<a href="%{url}" target="_blank" rel="noopener noreferrer">'.html_safe % { url: jira_docs_link_url }
          = html_escape(s_('JiraService|%{jira_docs_link_start}Enable the Jira integration%{jira_docs_link_end} to view your Jira issues in GitLab.')) % { jira_docs_link_start: jira_docs_link_start.html_safe, jira_docs_link_end: '</a>'.html_safe }
        %p.gl-text-center.gl-mb-0.gl-text-gray-500
          = s_('JiraService|This feature requires a Premium plan.')

      - else
        %h4.text-center= _("There are no issues to show")
        %p
          = _("The Issue Tracker is the place to add things that need to be improved or solved in a project. You can register or sign in to create issues for this project.")
        .text-center
          = link_to _('Register / Sign In'), new_user_session_path, class: 'btn btn-success'

- if show_import_button
  = render 'projects/issues/import_csv/modal'
